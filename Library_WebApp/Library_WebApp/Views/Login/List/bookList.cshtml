@model Library_WebApp.Models.BooksListViewModel

@{
    ViewData["Title"] = "Książki";
    ViewData["SubTable"] = "Egzemplarze";
    Layout = "~/Views/Shared/_Layout_Logged_In.cshtml";
}

<h2>@ViewData["Title"]</h2>

<p>
    <a asp-action="addBook">Dodaj nową książkę</a>
</p>

<button type="button" class="collapsible">Filtrowanie</button>
<div class="content">
    <form asp-controller="Login" asp-action="bookList">
        <div class="row">
            <div class="form-group col-md-6">
                <label asp-for="SearchName"></label>
                <input type="text" name="SearchName" class="form-control">
                <span asp-validation-for="SearchName" class="text-danger"></span>
            </div>
            <div class="form-group col-md-6">
                <label asp-for="SearchLibraryBranchId" class="control-label">filia</label>
                @Html.DropDownListFor(
                   m => m.SearchLibraryBranchId,
                   new SelectList(Model.LibraryBranchIds, "Value", "Text"),
                   "Wybierz gatunek",
                   new { @class = "form-control" })
                <span asp-validation-for="SearchLibraryBranchId" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                <label asp-for="SearchAuthor"></label>
                <input type="text" name="SearchAuthor" class="form-control">
                <span asp-validation-for="SearchAuthor" class="text-danger"></span>
            </div>
            <div class="form-group col-md-6">
                <label asp-for="SearchPublishingHouse"></label>
                <input type="text" name="SearchPublishingHouse" class="form-control">
                <span asp-validation-for="SearchName" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                <label asp-for="SearchGenre" class="control-label">gatunek</label>
                @Html.DropDownListFor(
                m => m.SearchGenre,
                new SelectList(Model.Genres, "Value", "Text"),
                "Wybierz gatunek",
                new { @class = "form-control" })
                <span asp-validation-for="SearchGenre" class="text-danger"></span>
            </div>
            <div class="form-group col-md-3">
                <h5>Egzemplarze</h5>
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isBorrowed" />
                    @Html.DisplayNameFor(model => model.isBorrowed)
                </label>
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isReserved" />
                    @Html.DisplayNameFor(model => model.isReserved)
                </label>
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isAviable" />
                    @Html.DisplayNameFor(model => model.isAviable)
                </label>
            </div>
        </div>
        
        <div class="form-row">
            <button type="submit" class="btn btn-primary mb-2">wyszukaj</button>
        </div>
    </form>
</div>

<div class="table-responsive col-md-5">
    <h4>@ViewData["Title"]</h4>
    <table class="table col-md-5">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Books[0].name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Books[0].genre)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Books)
            {
                string selectedRow = "";
                if (item.id == ViewBag.BookId)
                {
                    selectedRow = "success";
                }
                <tr class="@selectedRow">
                    <td>
                        @Html.DisplayFor(modelItem => item.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.genre)
                    </td>
                    <td>
                        @Html.ActionLink("Egzemplarze", "bookList", new { BookId = item.id }, null) |
                        @Html.ActionLink("Edytuj", "editBook", new { id = item.id }, null) |
                        @Html.ActionLink("Szczegóły", "showBook", new { id = item.id }, null) |
                        @Html.ActionLink("Usuń", "deleteBook", new { id = item.id }, null)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="container col-md-1">

</div>
@if (Model.Volumes != null)
{
<div class="table-responsive col-md-6">
    <h4>@ViewData["SubTable"]</h4>
    @Html.ActionLink("Dodaj egzemplarz", "addVolume", null, null)
    <table class="table col-md-6">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Volumes[0].libraryBranchId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PublishingHouses[0].name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Volumes[0].condition)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Volumes[0].State)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Volumes)
            {
                string state = "";
                string PublishingHouseName = "";
                string newLink = "";
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.libraryBranchId)
                    </td>
                    <td>
                        @{
                            PublishingHouseName = Model.PublishingHouses.Find(x => x.id == item.libraryBranchId).name;
                        }
                        @PublishingHouseName
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.condition)
                    </td>
                    <td>
                        @{
                            if (item.State == Volume.BookState.Aviable)
                            {
                                state = "Dostępna";
                            }
                            else if (item.State == Volume.BookState.Borrowed)
                            {
                                state = "Wypożyczona";
                            }
                            else
                            {
                                state = "Zarezerwowana";
                            }
                            @state
                        }

                    </td>
                    <td>
                        @{
                            if (item.State == Volume.BookState.Aviable)
                            {
                                @Html.ActionLink("Wypożycz", "borrowVolume", new { id = item.id }, null);
                                newLink = " |";
                            }
                        }
                        @newLink
                        @Html.ActionLink("Edytuj", "editVolume", new { id = item.id }, null) |
                        @Html.ActionLink("Szczegóły", "showVolume", new { id = item.id }, null) |
                        @Html.ActionLink("Usuń", "deleteVolume", new { id = item.id }, null)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
}
